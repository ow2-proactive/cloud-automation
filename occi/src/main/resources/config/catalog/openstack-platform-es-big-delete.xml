<?xml version="1.0" encoding="UTF-8"?>
<job xmlns="urn:proactive:jobdescriptor:dev" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:proactive:jobdescriptor:dev ../../src/scheduler/src/org/ow2/proactive/scheduler/common/xml/schemas/jobdescriptor/dev/schedulerjob.xsd" name="openstack-platform-es-big-delete" priority="normal" cancelJobOnError="true">

    <variables>
        <variable name="occi.core.id"/>
        <variable name="occi.paas.elasticity.masterplatform" value=""/>
        <variable name="occi.paas.elasticity.trigger" value=""/>

        <!-- Provided by rule -->
        <variable name="occi.server.endpoint"/>
        <variable name="iaas.provider.api.gateway.hostname"/>
        <variable name="iaas.provider.api.gateway.addons.dir"/>

    </variables>

    <jobClasspath>
        <pathElement path="${iaas.provider.api.gateway.addons.dir}/commons-codec-1.6.jar"/>
        <pathElement path="${iaas.provider.api.gateway.addons.dir}/commons-io-1.3.2.jar"/>
        <pathElement path="${iaas.provider.api.gateway.addons.dir}/commons-lang-2.6.jar"/>
        <pathElement path="${iaas.provider.api.gateway.addons.dir}/commons-logging-1.1.1.jar"/>
        <pathElement path="${iaas.provider.api.gateway.addons.dir}/connectors-3.5.0-SNAPSHOT.jar"/>
        <pathElement path="${iaas.provider.api.gateway.addons.dir}/httpclient-4.2.1.jar"/>
        <pathElement path="${iaas.provider.api.gateway.addons.dir}/httpcore-4.2.1.jar"/>
        <pathElement path="${iaas.provider.api.gateway.addons.dir}/iaas-api-3.5.0-SNAPSHOT.jar"/>
        <pathElement path="${iaas.provider.api.gateway.addons.dir}/json-path-0.9.1.jar"/>
        <pathElement path="${iaas.provider.api.gateway.addons.dir}/json-smart-1.1.1.jar"/>
        <pathElement path="${iaas.provider.api.gateway.addons.dir}/monitoring-3.5.0-SNAPSHOT.jar"/>
        <pathElement path="${iaas.provider.api.gateway.addons.dir}/nova-3.5.0-SNAPSHOT.jar"/>
        <pathElement path="${iaas.provider.api.gateway.addons.dir}/occi-1.0-SNAPSHOT.jar"/>
        <pathElement path="${iaas.provider.api.gateway.addons.dir}/workflow-catalog-1.0-SNAPSHOT.jar"/>
    </jobClasspath>

    <genericInformation>
        <info name="category" value="platform"/>
        <info name="operation" value="update"/>
        <info name="action" value="stop"/>
        <info name="provider" value="openstack"/>
        <info name="application" value="elasticsearch"/>
        <info name="flavor" value="elastic"/>
    </genericInformation>

    <taskFlow>

        <task name="undeploy-es">
            <selection>
                <script type="dynamic" >
                    <code language="javascript">
                        <![CDATA[
var hostName = "${iaas.provider.api.gateway.hostname}";
if (org.ow2.proactive.scripting.helper.selection.SelectionUtils.checkHostName(hostName)) {
   selected = true;
   print("Hostname = " + hostName + " ==> selected");
} else {
   selected = false;
   print("Hostname <> " + hostName + " ==> not selected");
}
]]>
                    </code>
                </script>
            </selection>
            <scriptExecutable>
                <script >
                    <code language="groovy">
                        <![CDATA[

import org.ow2.proactive.brokering.occi.client.*

println "Current category ID: ${occi.core.id}"

def occiServerUrl = "${occi.server.endpoint}"
def client = new org.ow2.proactive.brokering.occi.client.OcciClient(occiServerUrl);

def base = new ResourceInstance("${occi.paas.elasticity.masterplatform}")
println "Base: " + base.getLocation()
def trigger = new ResourceInstance("${occi.paas.elasticity.trigger}")
println "Trigger: " + trigger.getLocation()

ResourceInstance base1 = client.updateResource(base.getCategory(), base.getUuid(), Collections.EMPTY_MAP, "stop");
ResourceInstance trigger1 = client.updateResource(trigger.getCategory(), trigger.getUuid(), Collections.EMPTY_MAP, "stop");

def json = new net.minidev.json.JSONObject();
json.put("occi.paas.state", "down");
result = json.toJSONString()
println result

]]>
                    </code>
                </script>
            </scriptExecutable>
        </task>
    </taskFlow>
</job>
