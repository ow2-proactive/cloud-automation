<?xml version="1.0" encoding="UTF-8"?>
<job xmlns="urn:proactive:jobdescriptor:dev" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="urn:proactive:jobdescriptor:dev ../../src/scheduler/src/org/ow2/proactive/scheduler/common/xml/schemas/jobdescriptor/dev/schedulerjob.xsd"
     name="elasticsearch-elastic-platform-create" priority="normal" cancelJobOnError="true">
    <variables>

        <!-- Provided by elasticsearch rule -->
        <variable name="occi.server.endpoint"/>

        <variable name="elasticity.vm.count.maximum"/>
        <variable name="elasticity.vm.count.minimum"/>
        <variable name="occi.core.id"/>

        <!-- Output -->
        <variable name="occi.paas.elasticity.masterplatform" value="OUTPUT"/>
        <variable name="occi.paas.elasticity.trigger" value="OUTPUT"/>

    </variables>

    <genericInformation>
        <info name="category" value="platform"/>
        <info name="operation" value="create"/>
        <info name="action" value="start"/>
        <info name="provider" value="numergy"/>
        <info name="rule" value="numergy"/>
        <info name="application" value="elasticsearch"/>
        <info name="flavor" value="elastic"/>
    </genericInformation>

    <taskFlow>
        <task name="create-initial-es">
            <scriptExecutable>
                <script >
                    <code language="groovy">
                        <![CDATA[

import org.ow2.proactive.brokering.occi.client.OcciClient

def vmName = "EsMasterE-" + new Random().nextInt(10000)
def occiServerUrl = "${occi.server.endpoint}"
def client = new org.ow2.proactive.brokering.occi.client.OcciClient(occiServerUrl);
Map<String, String> ar = new HashMap<String, String>();
ar.put("rule","numergy");
ar.put("provider","numergy");
ar.put("occi.compute.hostname", vmName);
ar.put("flavor", "single");
ar.put("application", "elasticsearch");

def resource = client.createResource("platform", ar);

def json = new net.minidev.json.JSONObject();
json.put("occi.paas.application.endpoints", resource.getLocation())
json.put("occi.paas.elasticity.masterplatform", resource.getLocation());
result = json.toJSONString()
println result

]]>
                    </code>
                </script>
            </scriptExecutable>
        </task>

        <task name="create-initial-trigger">
            <depends>
                <task ref="create-initial-es"/>
            </depends>
            <scriptExecutable>
                <script >
                    <code language="groovy">
                        <![CDATA[

import org.ow2.proactive.brokering.occi.client.OcciClient

net.minidev.json.JSONObject json1 = com.jayway.jsonpath.JsonPath.parse(results[0].toString()).json()
def basePlatform = json1.get("occi.paas.elasticity.masterplatform")
println "Platform of base: $basePlatform"

def occiServerUrl = "${occi.server.endpoint}"
def client = new org.ow2.proactive.brokering.occi.client.OcciClient(occiServerUrl);

Map<String, String> ar = new HashMap<String, String>();
ar.put("rule","numergy");
ar.put("action.state", "done");
ar.put("occi.monitoring.periodms", "30000");
ar.put("occi.monitoring.condition", "ConditionNumergy.groovy")
ar.put("occi.monitoring.trueaction", "ActionTrueNumergy.groovy")
ar.put("occi.monitoring.falseaction", "ActionFalseNumergy.groovy")
ar.put("occi.monitoring.stopaction", "ActionStopNumergy.groovy")
ar.put("elasticity.vm.count.maximum", "${elasticity.vm.count.maximum}")
ar.put("elasticity.vm.count.minimum", "${elasticity.vm.count.minimum}")
ar.put("occi.paas.elasticity.masterplatform", basePlatform)
ar.put("occi.server.endpoint", occiServerUrl)

def resource = client.createResource("actiontrigger", ar);

def json = new net.minidev.json.JSONObject();
json.put("occi.paas.elasticity.trigger", resource.getLocation());
json.put("action.state", "done");
result = json.toJSONString()
println result

]]>
                    </code>
                </script>
            </scriptExecutable>
        </task>

    </taskFlow>

</job>
