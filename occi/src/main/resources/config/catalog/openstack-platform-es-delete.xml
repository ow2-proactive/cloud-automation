<?xml version="1.0" encoding="UTF-8"?>
<job xmlns="urn:proactive:jobdescriptor:dev" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:proactive:jobdescriptor:dev ../../src/scheduler/src/org/ow2/proactive/scheduler/common/xml/schemas/jobdescriptor/dev/schedulerjob.xsd" name="elasticsearch-platform-delete" priority="normal" cancelJobOnError="false">

    <variables>


        <variable name="iaas.provider.api.user"/>
        <variable name="iaas.provider.api.password"/>
        <variable name="iaas.provider.api.tenant"/>
        <variable name="iaas.provider.api.url"/>

        <variable name="occi.compute.hostname"/>
        <variable name="occi.compute.vendor.uuid"/>













    </variables>


    <jobClasspath>
        <pathElement path="/tmp/addons/commons-codec-1.6.jar"/>
        <pathElement path="/tmp/addons/commons-io-1.3.2.jar"/>
        <pathElement path="/tmp/addons/commons-lang-2.6.jar"/>
        <pathElement path="/tmp/addons/commons-logging-1.1.1.jar"/>
        <pathElement path="/tmp/addons/connectors-3.5.0-SNAPSHOT.jar"/>
        <pathElement path="/tmp/addons/httpclient-4.2.1.jar"/>
        <pathElement path="/tmp/addons/httpcore-4.2.1.jar"/>
        <pathElement path="/tmp/addons/iaas-api-3.5.0-SNAPSHOT.jar"/>
        <pathElement path="/tmp/addons/json-path-0.8.1.jar"/>
        <pathElement path="/tmp/addons/json-smart-1.1.1.jar"/>
        <pathElement path="/tmp/addons/monitoring-3.5.0-SNAPSHOT.jar"/>
        <pathElement path="/tmp/addons/nova-3.5.0-SNAPSHOT.jar"/>
        <pathElement path="/tmp/addons/rest-api-schemas-5.1.0.jar"/>
    </jobClasspath>

    <genericInformation>
        <info name="category" value="platform"/>
        <info name="operation" value="update"/>
        <info name="action" value="stop"/>
        <info name="provider" value="openstack"/>
        <info name="application" value="elasticsearch"/>
        <info name="flavor" value="single"/>
    </genericInformation>

    <taskFlow>

        <task name="stop-es">
            <genericInformation>
                <info name="NODE_ACCESS_TOKEN" value="${occi.compute.hostname}"/>
            </genericInformation>
            <scriptExecutable>
                <script >
                    <code language="groovy">
                        <![CDATA[
// Stop ElasticSearch
def p = "service elasticsearch stop".execute()
println "stderr: " + p.err.text
println "stdout: " + p.text
println "exitvalue: " + p.exitValue()

def json = new net.minidev.json.JSONObject();
result = json.toJSONString()
println result
]]>
                    </code>
                </script>
            </scriptExecutable>
        </task>

        <task name="stop-rm-node">
            <genericInformation>
                <info name="NODE_ACCESS_TOKEN" value="${occi.compute.hostname}"/>
            </genericInformation>
            <depends>
                <task ref="stop-es"/>
            </depends>
            <scriptExecutable>
                <script >
                    <code language="groovy">
                        <![CDATA[
// Stop RMNode
def p = "/root/stop-node.sh".execute()
println "stderr: " + p.err.text
println "stdout: " + p.text
println "exitvalue: " + p.exitValue()

def json = new net.minidev.json.JSONObject();
result = json.toJSONString()
println result
]]>
                    </code>
                </script>
            </scriptExecutable>
        </task>

        <task name="undeploy-vm">
            <depends>
                <task ref="stop-rm-node"/>
            </depends>
            <scriptExecutable>
                <script >
                    <code language="groovy">
                        <![CDATA[

import org.ow2.proactive.iaas.*
import org.ow2.proactive.iaas.nova.*
import net.minidev.json.JSONObject

String accessKey = '${iaas.provider.api.user}'
String secretKey = '${iaas.provider.api.password}'
String tenantId = '${iaas.provider.api.tenant}'
String uri = '${iaas.provider.api.url}'

String instanceId = '${occi.compute.vendor.uuid}'

if (instanceId == null || instanceId.isEmpty())
    throw new RuntimeException("No VM uuid specified.");

println ">>> Logging to IaaS server..."

def api = NovaAPI.getNovaAPI(
        accessKey, secretKey, tenantId,
        new URI(uri));

println ">>> Undeploying VM: " + instanceId

api.stopInstance(new IaasInstance(instanceId))

println ">>> VM undeployed"

def json = new net.minidev.json.JSONObject()
json.put("occi.compute.state", "down")
result = json.toJSONString()
println result

]]>
                    </code>
                </script>
            </scriptExecutable>
        </task>
    </taskFlow>
</job>
