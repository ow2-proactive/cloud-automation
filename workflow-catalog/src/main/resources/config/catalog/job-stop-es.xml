<?xml version="1.0" encoding="UTF-8"?>
<job xmlns="urn:proactive:jobdescriptor:dev" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="urn:proactive:jobdescriptor:dev ../../src/scheduler/src/org/ow2/proactive/scheduler/common/xml/schemas/jobdescriptor/dev/schedulerjob.xsd"
	name="job-stop-es" priority="normal" cancelJobOnError="true">
    <variables>
        <variable name="saas.elasticsearch.home" value="/home/proactive/es"/>
        <variable name="saas.elasticsearch.node.name" value="token"/>
    </variables>

    <genericInformation>
        <info name="category" value="compute"/>
        <info name="operation" value="create"/>
        <info name="action" value="start"/>
        <info name="provider" value="numergy"/>
    </genericInformation>

	<taskFlow>
        <task name="start-es">
            <genericInformation>
                <info name="NODE_ACCESS_TOKEN" value="${saas.elasticsearch.node.name}"/>
            </genericInformation>
            <scriptExecutable>
                <script >
                    <code language="groovy">
                        <![CDATA[

import org.apache.commons.io.FileUtils
def elasticSearchHome = "${saas.elasticsearch.home}"

def SEP = File.separator
def pidFilePath = SEP + "tmp" + SEP + "es.pid"
def logFilePath = SEP + "tmp" + SEP + "es.log"

def pidFile = new File(pidFilePath)
if (!pidFile.exists()) {
    println "No process running, nothing to kill."
} else {
    def pid = FileUtils.readFileToString(pidFile)

    def process = ["kill", pid].execute()
    def error = process.waitFor()

    // Check that the PID file exists
    if (error == 0)
        println "Done, process not running anymore."
    else
        throw new RuntimeException("Kill failed")
}

]]>
                    </code>
                </script>
            </scriptExecutable>
        </task>
    </taskFlow>
</job>

