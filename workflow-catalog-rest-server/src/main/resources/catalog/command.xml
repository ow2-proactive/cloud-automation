<?xml version="1.0" encoding="UTF-8"?>
<job xmlns="urn:proactive:jobdescriptor:dev" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:proactive:jobdescriptor:dev ../../src/scheduler/src/org/ow2/proactive/scheduler/common/xml/schemas/jobdescriptor/dev/schedulerjob.xsd" name="command" priority="normal" cancelJobOnError="true">

    <!-- command : command to be executed in any node -->
    <!-- command can be: "hostname", "ls /tmp/", etc. ... -->
    <!-- All USERSPACE: strings will be replaced with the corresponding path. -->
    <variables>
        <variable name="command" value="hostname"/>
    </variables>

	<taskFlow>

        <task name="execute-command">
            <inputFiles>
                <files includes="*" accessMode="transferFromUserSpace"/>
            </inputFiles>
            <scriptExecutable>
                <script >
                    <code language="groovy">
                        <![CDATA[
                        import groovy.json.JsonOutput
                        import org.ow2.proactive.datascale.slurm.OutputParser

                        def command = "${command}"

                        def root = new File(new URI(localspace.getRealURI()))

                        command = command.replace("USERSPACE:", root.getAbsolutePath())

                        def p = command.execute()
                        p.waitFor()
                        def stderr = p.err.text
                        def stdout = p.text
                        def errcode = p.exitValue()

                        result = JsonOutput.toJson(
                                [
                                        command: command,
                                        errcode: errcode,
                                        stdout: stdout,
                                        stderr: stderr
                                ])

                        println "Result: " + JsonOutput.prettyPrint(result)

                        ]]>
                    </code>
                </script>
            </scriptExecutable>
        </task>

    </taskFlow>
</job>

